% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gg_minimal_depth.R
\name{gg_minimal_depth}
\alias{gg_minimal_depth}
\alias{gg_minimal_depth.rfsrc}
\alias{gg_minimal_depth.randomForest}
\title{Minimal depth data object (\code{[randomForestSRC]{var.select}})}
\usage{
gg_minimal_depth(object, ...)
}
\arguments{
\item{object}{A \code{[randomForestSRC]{rfsrc}} object, \code{[randomForestSRC]{predict}}
object or the list from the \code{[randomForestSRC]{var.select.rfsrc}} function.}

\item{...}{optional arguments passed to the \code{[randomForestSRC]{var.select}} function 
if operating on an \code{[randomForestSRC]{rfsrc}} object.}
}
\value{
\code{gg_minimal_depth} object, A modified list of variables from the 
\code{[randomForestSRC]{var.select}} function, ordered by minimal depth rank.
}
\description{
the \code{[randomForestSRC]{var.select}} function implements 
random forest variable selection using tree minimal depth methodology. The 
\code{gg_minimal_depth} 
function takes the output from \code{[randomForestSRC]{var.select}} and creates a 
\code{data.frame} formatted for the \code{\link{plot.gg_minimal_depth}} function.
}
\examples{
## Examples from RFSRC package... 
## ------------------------------------------------------------
## classification example
## ------------------------------------------------------------
## -------- iris data
## You can build a randomForest
# rfsrc_iris <- rfsrc(Species ~ ., data = iris)
# varsel_iris <- randomForestSRC::var.select(rfsrc_iris)
# ... or load a cached randomForestSRC object
data(varsel_iris, package="ggRandomForests")

# Get a data.frame containing minimaldepth measures
gg_dta<- gg_minimal_depth(varsel_iris)

# Plot the gg_minimal_depth object
plot(gg_dta)

## ------------------------------------------------------------
## Regression example
## ------------------------------------------------------------
\dontrun{
## -------- air quality data
# rfsrc_airq <- rfsrc(Ozone ~ ., data = airquality, na.action = "na.impute")
# varsel_airq <- randomForestSRC::var.select(rfsrc_airq)
# ... or load a cached randomForestSRC object
data(varsel_airq, package="ggRandomForests")

# Get a data.frame containing error rates
gg_dta<- gg_minimal_depth(varsel_airq)

# Plot the gg_minimal_depth object
plot(gg_dta)
}

## -------- Boston data
data(varsel_Boston, package="ggRandomForests")

# Get a data.frame containing error rates
plot(gg_minimal_depth(varsel_Boston))

\dontrun{
## -------- mtcars data
data(varsel_mtcars, package="ggRandomForests")

# Get a data.frame containing error rates
plot.gg_minimal_depth(varsel_mtcars)
}

## ------------------------------------------------------------
## Survival example
## ------------------------------------------------------------
\dontrun{
## -------- veteran data
## veteran data
## randomized trial of two treatment regimens for lung cancer
# data(veteran, package = "randomForestSRC")
# rfsrc_veteran <- rfsrc(Surv(time, status) ~ ., data = veteran, ntree = 100)
# varsel_veteran <- randomForestSRC::var.select(rfsrc_veteran)
# Load a cached randomForestSRC object
data(varsel_veteran, package="ggRandomForests")

gg_dta <- gg_minimal_depth(varsel_veteran)
plot(gg_dta)


## -------- pbc data
data(varsel_pbc, package="ggRandomForests")

gg_dta <- gg_minimal_depth(varsel_pbc)
plot(gg_dta)
}
}
\seealso{
\code{[randomForestSRC]{var.select}} \code{\link{plot.gg_minimal_depth}}
}
